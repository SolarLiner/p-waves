{"version":3,"file":"pwaves-preact.js","sources":["../src/context.ts","../src/index.tsx"],"sourcesContent":["import { useContext, useState } from \"preact/hooks\";\n\nimport { AudioPlayer, Track } from \"p-waves/src/audioplayer\";\nimport { Context, createContext } from \"preact\";\nimport { observe } from \"p-waves/src/event\";\n\nlet _context: Context<AudioPlayer>;\nexport function getContext() {\n  if (!_context) {\n    return (_context = createContext(new AudioPlayer()));\n  }\n  return _context;\n}\n\nexport function useAudioPlayer() {\n  const [{ player, revision }, setState] = useState({ player: new AudioPlayer(), revision: 0 });\n  console.log(`[preact/context] state revision`, revision);\n  if (revision === 0)\n    observe(player).subscribe(ev => {\n      console.log(`[AudioPlayer] ${ev.type}:`, ev.value);\n      setState({ player, revision: revision + 1 });\n    });\n  return player;\n}\n","import { h, RenderableProps } from \"preact\";\n\nimport { getContext, useAudioPlayer } from \"./context\";\n\nexport function Provider({ children }: RenderableProps<{}>) {\n  const ctx = getContext();\n  const player = useAudioPlayer();\n\n  return <ctx.Provider value={player}>{children}</ctx.Provider>;\n}\n\nexport { getContext, useAudioPlayer } from \"./context\";\n"],"names":["_context","getContext","createContext","AudioPlayer","useAudioPlayer","useState","player","revision","console","log","observe","subscribe","ev","value","setState","ref","ctx","h","Provider","children"],"mappings":"IAMIA,oHACJ,SAAgBC,WACTD,IACKA,EAAWE,gBAAc,IAAIC,gBAKzC,SAAgBC,UAC2BC,WAAS,CAAEC,OAAQ,IAAIH,cAAeI,SAAU,iDACzFC,QAAQC,sCAAuCF,GAC9B,IAAbA,GACFG,UAAQJ,GAAQK,mBAAUC,GACxBJ,QAAQC,qBAAqBG,WAAYA,EAAGC,OAC5CC,EAAS,QAAER,EAAQC,SAAUA,EAAW,MAErCD,4BClBgBS,oBACjBC,EAAMf,IACNK,EAASF,WAERa,IAACD,EAAIE,UAASL,MAAOP,GAASa"}